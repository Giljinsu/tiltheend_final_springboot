
CREATE TABLE ADMINPAGELIST
(
  LISTID      VARCHAR(100) NOT NULL COMMENT '리스트아이디',
  PRODUCT_ID  VARCHAR(100) NOT NULL COMMENT '상품아이디',
  DELIVERY_ID VARCHAR(100) NOT NULL COMMENT '배송ID',
  RANGKING    INTEGER      NOT NULL COMMENT '순위',
  SALES       INTEGER      NOT NULL COMMENT '매출',
  PRIMARY KEY (LISTID)
) COMMENT '관리자페이지리스트';

CREATE TABLE ANNOUNCEMENT
(
  POST_NO_ANNO INTEGER      NOT NULL COMMENT '번호',
  UID          VARCHAR(100) NOT NULL COMMENT '유저ID',
  CATEGORY     VARCHAR(200) NOT NULL COMMENT '구분',
  TITLE        VARCHAR(200) NOT NULL COMMENT '제목',
  DATE         VARCHAR(200) NOT NULL COMMENT '날짜',
  CONTENT      VARCHAR(200) NOT NULL COMMENT '내용',
  PRIMARY KEY (POST_NO_ANNO)
);

CREATE TABLE CIP_ATTACHFILE
(
  ATTACHFILE_SEQ    varchar(40)  NOT NULL COMMENT '첨부파일 일련번호',
  SOURCE_UNIQUE_SEQ varchar(40)  NOT NULL COMMENT '사용하는 위치 해당되는 키의 주요키 넣으시면 된다',
  ATTACHFILE_TYPE   varchar(40)  NULL     COMMENT '첨부파일 유형',
  ORGINALFILE_NAME  varchar(200) NOT NULL COMMENT '원본 파일명',
  PHYSICALFILE_NAME varchar(200) NOT NULL COMMENT '첨부 파일명',
  REGISTER_SEQ      varchar(50)  NOT NULL COMMENT '등록자SEQ',
  REGISTRY_DATE     varchar(20)  NOT NULL COMMENT '등록일자',
  MODIFIER_SEQ      varchar(40)  NOT NULL COMMENT '수정자_SEQ',
  MODIFY_DATE       varchar(20)  NOT NULL COMMENT '수정일자',
  PRIMARY KEY (ATTACHFILE_SEQ)
) COMMENT '파일들';

CREATE TABLE COMMENT
(
  COMMENT_UID       VARCHAR(100) NOT NULL COMMENT '댓글ID',
  UID               VARCHAR(100) NOT NULL COMMENT '유저ID',
  DATE              VARCHAR(100) NULL     COMMENT '작성날',
  CONTENT           VARCHAR(100) NULL     COMMENT '내용',
  SOURCE_UNIQUE_SEQ VARCHAR(100) NULL     COMMENT '사용하는위치',
  PRIMARY KEY (COMMENT_UID)
) COMMENT '댓글';

CREATE TABLE COORDINATION_INFO
(
  COORDINATION_ID   VARCHAR(100) NOT NULL COMMENT '코디게시글ID',
  UID               VARCHAR(100) NOT NULL COMMENT '유저ID',
  PRODUCT_ID        VARCHAR(100) NOT NULL COMMENT '상품아이디',
  TITLE             VARCHAR(100) NULL     COMMENT '제목',
  BULLETIN_NO       VARCHAR(100) NULL     COMMENT '게시글번호',
  USERNAME          VARCHAR(100) NULL     COMMENT '이름',
  HEIGHT            VARCHAR(100) NULL     COMMENT '키',
  WEIGHT            VARCHAR(100) NULL     COMMENT '무게',
  CORD_CONTENT      VARCHAR(100) NULL     COMMENT '게시글 내용',
  VIEWS             VARCHAR(100) NULL     COMMENT '조회수',
  WRITE_DATE        VARCHAR(100) NULL     COMMENT '작성날짜',
  MODIFICATION_DATE VARCHAR(100) NULL     COMMENT '수정날짜',
  LIKES             VARCHAR(100) NULL     COMMENT '좋아요수',
  JOB               VARCHAR(100) NULL     COMMENT '직업',
  PRIMARY KEY (COORDINATION_ID)
) COMMENT '코디정보';

CREATE TABLE DELIVERY
(
  DELIVERY_ID      VARCHAR(100) NOT NULL COMMENT '배송ID',
  DELIVERY_COMPANY VARCHAR(100) NULL     COMMENT '택배사',
  SHIPMENT_TIME    VARCHAR(100) NULL     COMMENT '제품출고시간',
  DELIVERY_STATUS  VARCHAR(100) NULL     COMMENT '배송상태',
  DELIVERY_ADDRESS VARCHAR(100) NULL     COMMENT '배송지',
  USERNAME         VARCHAR(100) NULL     COMMENT '받는분이름',
  PHONENUMBER      VARCHAR(100) NULL     COMMENT '받는분전화번호',
  PRIMARY KEY (DELIVERY_ID)
) COMMENT '배송정보';

CREATE TABLE FAQ
(
  POST_NO_FAQ INTEGER      NOT NULL,
  UID         VARCHAR(100) NOT NULL COMMENT '유저ID',
  CATEGORY    VARCHAR(200) NOT NULL,
  TITLE       VARCHAR(200) NOT NULL,
  DATE        VARCHAR(200) NOT NULL,
  CONTENT     VARCHAR(200) NOT NULL,
  PRIMARY KEY (POST_NO_FAQ)
);

CREATE TABLE ORDERLIST
(
  ORDER_ID            VARCHAR(100) NOT NULL COMMENT '주문ID',
  SHOPPINGCART_ID     VARCHAR(100) NOT NULL COMMENT '쇼핑카트리스트ID',
  DELIVERY_ID         VARCHAR(100) NOT NULL COMMENT '배송ID',
  ORDER_METHOD        VARCHAR(100) NULL     COMMENT '결제방법',
  FINAL_PRICE         VARCHAR(100) NULL     COMMENT '최종구매가격',
  ORDERDATE           VARCHAR(100) NULL     COMMENT '주문날짜',
  ADDITIONAL_DISCOUNT INTEGER      NULL     COMMENT '추가할인(%)',
  PRIMARY KEY (ORDER_ID)
) COMMENT '주문';

CREATE TABLE PRODUCT
(
  PRODUCT_ID    VARCHAR(100) NOT NULL COMMENT '상품아이디',
  BRAND         VARCHAR(100) NULL     COMMENT '브랜드',
  CLOTHES_NAME  VARCHAR(100) NULL     COMMENT '의류명',
  PRICE         INTEGER      NULL     COMMENT '가격',
  CATEGORY      VARCHAR(100) NULL     COMMENT '카테고리',
  DISCOUNT_RATE INTEGER      NULL     COMMENT '할인율%',
  SALES_VOLUME  INTEGER      NULL     COMMENT '판매수',
  PRIMARY KEY (PRODUCT_ID)
) COMMENT '상품';

CREATE TABLE QNA
(
  POST_NO_QNA INTEGER      NOT NULL,
  UID         VARCHAR(100) NOT NULL COMMENT '유저ID',
  CATEGORY    VARCHAR(200) NOT NULL,
  TITLE       VARCHAR(200) NOT NULL,
  DATE        VARCHAR(200) NOT NULL,
  CONTENT     VARCHAR(200) NOT NULL,
  PRIMARY KEY (POST_NO_QNA)
);

CREATE TABLE REVIEW
(
  REVIEW_ID      VARCHAR(100) NOT NULL COMMENT '리뷰ID',
  UID            VARCHAR(100) NOT NULL COMMENT '유저ID',
  PRODUCT_ID     VARCHAR(100) NOT NULL COMMENT '상품아이디',
  RATE           INTEGER      NOT NULL COMMENT '별점',
  REVIEW_CONTENT VARCHAR(100) NOT NULL COMMENT '리뷰 내용',
  PRIMARY KEY (REVIEW_ID)
);

CREATE TABLE SHOPPINGCART
(
  SHOPPINGCART_ID VARCHAR(100) NOT NULL COMMENT '쇼핑카트리스트ID',
  PRODUCT_ID      VARCHAR(100) NOT NULL COMMENT '상품아이디',
  UID             VARCHAR(100) NOT NULL COMMENT '유저ID',
  PRODUCT_COUNT   VARCHAR(100) NULL     COMMENT '상품개수',
  DATE            VARCHAR(100) NULL     COMMENT '담은날짜',
  PRIMARY KEY (SHOPPINGCART_ID)
) COMMENT '쇼핑카트 리스트';

CREATE TABLE USER
(
  UID         VARCHAR(100) NOT NULL COMMENT '유저ID',
  ID          VARCHAR(100) NULL     COMMENT '아이디',
  PW          VARCHAR(100) NULL     COMMENT '비밀번호',
  EMAIL       VARCHAR(100) NULL     COMMENT '이메일',
  USERNAME    VARCHAR(100) NULL     COMMENT '이름',
  SEX         VARCHAR(100) NULL     COMMENT '성별',
  PHONENUMBER VARCHAR(100) NULL     COMMENT '전화번호',
  BIRTH_YEAR  VARCHAR(100) NULL     COMMENT '태어난연도',
  ROLE        VARCHAR(100) NULL     COMMENT '권한',
  PRIMARY KEY (UID)
) COMMENT '유저테이블';

CREATE TABLE WISHLIST
(
  PRODUCT_ID VARCHAR(100) NOT NULL COMMENT '상품아이디',
  UID        VARCHAR(100) NOT NULL COMMENT '유저ID'
) COMMENT '위시리스트';

ALTER TABLE COORDINATION_INFO
  ADD CONSTRAINT FK_PRODUCT_TO_COORDINATION_INFO
    FOREIGN KEY (PRODUCT_ID)
    REFERENCES PRODUCT (PRODUCT_ID);

ALTER TABLE COORDINATION_INFO
  ADD CONSTRAINT FK_USER_TO_COORDINATION_INFO
    FOREIGN KEY (UID)
    REFERENCES USER (UID);

ALTER TABLE REVIEW
  ADD CONSTRAINT FK_USER_TO_REVIEW
    FOREIGN KEY (UID)
    REFERENCES USER (UID);

ALTER TABLE SHOPPINGCART
  ADD CONSTRAINT FK_PRODUCT_TO_SHOPPINGCART
    FOREIGN KEY (PRODUCT_ID)
    REFERENCES PRODUCT (PRODUCT_ID);

ALTER TABLE SHOPPINGCART
  ADD CONSTRAINT FK_USER_TO_SHOPPINGCART
    FOREIGN KEY (UID)
    REFERENCES USER (UID);

ALTER TABLE ORDERLIST
  ADD CONSTRAINT FK_DELIVERY_TO_ORDERLIST
    FOREIGN KEY (DELIVERY_ID)
    REFERENCES DELIVERY (DELIVERY_ID);

ALTER TABLE REVIEW
  ADD CONSTRAINT FK_PRODUCT_TO_REVIEW
    FOREIGN KEY (PRODUCT_ID)
    REFERENCES PRODUCT (PRODUCT_ID);

ALTER TABLE WISHLIST
  ADD CONSTRAINT FK_PRODUCT_TO_WISHLIST
    FOREIGN KEY (PRODUCT_ID)
    REFERENCES PRODUCT (PRODUCT_ID);

ALTER TABLE WISHLIST
  ADD CONSTRAINT FK_USER_TO_WISHLIST
    FOREIGN KEY (UID)
    REFERENCES USER (UID);

ALTER TABLE QNA
  ADD CONSTRAINT FK_USER_TO_QNA
    FOREIGN KEY (UID)
    REFERENCES USER (UID);

ALTER TABLE FAQ
  ADD CONSTRAINT FK_USER_TO_FAQ
    FOREIGN KEY (UID)
    REFERENCES USER (UID);

ALTER TABLE ANNOUNCEMENT
  ADD CONSTRAINT FK_USER_TO_ANNOUNCEMENT
    FOREIGN KEY (UID)
    REFERENCES USER (UID);

ALTER TABLE ADMINPAGELIST
  ADD CONSTRAINT FK_PRODUCT_TO_ADMINPAGELIST
    FOREIGN KEY (PRODUCT_ID)
    REFERENCES PRODUCT (PRODUCT_ID);

ALTER TABLE ADMINPAGELIST
  ADD CONSTRAINT FK_DELIVERY_TO_ADMINPAGELIST
    FOREIGN KEY (DELIVERY_ID)
    REFERENCES DELIVERY (DELIVERY_ID);

ALTER TABLE ORDERLIST
  ADD CONSTRAINT FK_SHOPPINGCART_TO_ORDERLIST
    FOREIGN KEY (SHOPPINGCART_ID)
    REFERENCES SHOPPINGCART (SHOPPINGCART_ID);

ALTER TABLE COMMENT
  ADD CONSTRAINT FK_USER_TO_COMMENT
    FOREIGN KEY (UID)
    REFERENCES USER (UID);
