CREATE TABLE ADMIN
(
  RANGKING          INTEGER      NOT NULL COMMENT '순위',
  PRODUCT_CODE      VARCHAR(200) NOT NULL COMMENT '상품코드',
  SALES_VOLUME      INTEGER      NOT NULL COMMENT '판매 수',
  SALES             INTEGER      NOT NULL COMMENT '매출',
  DELIVERY_COMPLETE INTEGER      NULL     COMMENT '배송완료',
  DELIVERY_READY    INTEGER      NOT NULL COMMENT '배송준비',
  PRIMARY KEY (PRODUCT_CODE)
);


CREATE TABLE COORDINATION_INFO
(
  COORDINATION_ID   VARCHAR(100) NOT NULL COMMENT '코디게시글ID',
  BULLETIN_NO       VARCHAR(100) NULL     COMMENT '게시글번호',
  PICTURE           VARCHAR(100) NULL     COMMENT '사진',
  USERNAME          VARCHAR(100) NULL     COMMENT '이름',
  HEIGHT            VARCHAR(100) NULL     COMMENT '키',
  WEIGHT            VARCHAR(100) NULL     COMMENT '무게',
  JOB               VARCHAR(100) NULL     COMMENT '게시글 내용',
  PRODUCT_ID        VARCHAR(100) NULL     COMMENT '참조제품ID',
  VIEWS             VARCHAR(100) NULL     COMMENT '조회수',
  DATE              VARCHAR(100) NULL     COMMENT '작성날짜',
  MODIFICATION_DATE VARCHAR(100) NULL     COMMENT '수정날짜',
  LIKES             VARCHAR(100) NULL     COMMENT '좋아요수',
  PRIMARY KEY (COORDINATION_ID)
) COMMENT '코디정보';

CREATE TABLE CIP_ATTACHFILE
(
	-- 파일을 N:N 관계로 연계 위해 추가
	ATTACHFILE_SEQ varchar(40) NOT NULL COMMENT '첨부파일 일련번호',
	-- 원본레코드 UNIQUE SEQ, 상담일지는 member_seq
	SOURCE_UNIQUE_SEQ varchar(40) NOT NULL COMMENT '원본레코드 UNIQUE SEQ',
	-- 첨부파일 유형
	ATTACHFILE_TYPE varchar(40) COMMENT '첨부파일 유형',
	-- 원본파일_명
	ORGINALFILE_NAME varchar(200) NOT NULL COMMENT '원본 파일명',
	-- 첨부 파일명
	PHYSICALFILE_NAME varchar(200) NOT NULL COMMENT '첨부 파일명',
	-- 썸네일 첨부파일명
	THUMBNAIL_NAME varchar(500) COMMENT '썸네일 첨부파일명',
	-- 첨부파일 저장경로
	ATTACHFILE_PATH varchar(500) COMMENT '첨부파일 저장경로',
	-- 첨부파일 크기
	ATTACHFILE_SIZE decimal COMMENT '첨부파일 크기',
	ATTACHFILE_HEIGHT decimal COMMENT '파일 높이',
	ATTACHFILE_WIDTH decimal COMMENT '파일 폭',
	-- 등록자SEQ
	REGISTER_SEQ varchar(50) NOT NULL COMMENT '등록자SEQ',
	-- 등록일자
	REGISTRY_DATE varchar(20) NOT NULL COMMENT '등록일자',
	MODIFIER_SEQ varchar(40) NOT NULL COMMENT '수정자_SEQ',
	-- 수정일자
	MODIFY_DATE varchar(20) NOT NULL COMMENT '수정일자',
	PRIMARY KEY (ATTACHFILE_SEQ)
) COMMENT = '파일 정보';

CREATE TABLE ITEM_INFO
(
  PRODUCT_CODE VARCHAR(200) NOT NULL COMMENT '상품코드',
  PRODUCT_NAME VARCHAR(200) NOT NULL COMMENT '상품이름',
  PRICE        INTEGER      NOT NULL COMMENT '가격',
  SIZE         VARCHAR(100) NOT NULL COMMENT '사이즈',
  COLOR        VARCHAR(200) NULL     COMMENT '색상',
  PRIMARY KEY (PRODUCT_CODE)
);

CREATE TABLE REVIEW
(
  PRODUCT_CODE   VARCHAR(200) NOT NULL COMMENT '상품코드',
  REVIEW_CONTENT VARCHAR      NOT NULL COMMENT '리뷰 내용',
  RATE           INTEGER      NOT NULL COMMENT '별점'
);



CREATE TABLE ORDERLIST
(
  ORDER_ID         VARCHAR(100) NOT NULL COMMENT '주문ID',
  USERNAME         VARCHAR(100) NULL     COMMENT '이름',
  EMAIL            VARCHAR(100) NULL     COMMENT '이메일',
  PHONENUMBER      VARCHAR(100) NULL     COMMENT '전화번호',
  ORDERDATE        VARCHAR(100) NULL     COMMENT '주문날짜',
  DELIVERY_ADDRESS VARCHAR(100) NULL     COMMENT '배송지',
  PRODUCT_ID       VARCHAR(100) NULL     COMMENT '상품ID',
  PRICE            VARCHAR(100) NULL     COMMENT '구매가격',
  ORDER_METHOD     VARCHAR(100) NULL     COMMENT '결제방법',
  PRIMARY KEY (ORDER_ID)
) COMMENT '주문';

CREATE TABLE DELIVERY
(
  DELIVERY_ID      VARCHAR(100) NOT NULL COMMENT '배송ID',
  DELIVERY_COMPANY VARCHAR(100) NULL     COMMENT '택배사',
  SHIPMENT_TIME    VARCHAR(100) NULL     COMMENT '제품출고시간',
  DELIVERY_STATUS  VARCHAR(100) NULL     COMMENT '배송상태',
  DELIVERY_ADDRESS VARCHAR(100) NULL     COMMENT '배송지',
  PRIMARY KEY (DELIVERY_ID)
) COMMENT '배송정보';


CREATE TABLE PRODUCT
(
  PRODUCT_ID             VARCHAR(100) NOT NULL COMMENT '상품아이디',
  PICTURE                VARCHAR(100) NULL     COMMENT '사진',
  BRAND                  VARCHAR(100) NULL     COMMENT '브랜드',
  CLOTHES_NAME           VARCHAR(100) NULL     COMMENT '의류명',
  PRICE                  INTEGER      NULL     COMMENT '가격',
  IS_BESTSELLING_PRODUCT VARCHAR(100) NULL     COMMENT '베스트상품여부',
  CATEGORY               VARCHAR(100) NULL     COMMENT '카테고리',
  DISCOUNT_RATE          VARCHAR(100) NULL     COMMENT '할인율',
  PRIMARY KEY (PRODUCT_ID)
) COMMENT '상품';

CREATE TABLE SHOPPINGCART
(
  SHOPPINGCART_ID    VARCHAR(100) NOT NULL COMMENT '쇼핑카트리스트ID',
  SHOPPINGCART_ORDER VARCHAR(100) NULL     COMMENT '쇼핑카트리스트순서',
  PRODUCT_ID         VARCHAR(100) NULL     COMMENT '상품ID',
  PRODUCT_COUNT      VARCHAR(100) NULL     COMMENT '상품개수',
  PRIMARY KEY (SHOPPINGCART_ID)
) COMMENT '쇼핑카트 리스트';

CREATE TABLE USER
(
  UID         VARCHAR(100) NULL     COMMENT '유저ID',
  ID          VARCHAR(100) NULL     COMMENT '아이디',
  PW          VARCHAR(100) NULL     COMMENT '비밀번호',
  EMAIL       VARCHAR(100) NULL     COMMENT '이메일',
  USERNAME    VARCHAR(100) NULL     COMMENT '이름',
  SEX         VARCHAR(100) NULL     COMMENT '성별',
  PHONENUMBER VARCHAR(100) NULL     COMMENT '전화번호',
  BIRTH_YEAR  VARCHAR(100) NULL     COMMENT '태어난연도',
  ROLE        VARCHAR(100) NULL     COMMENT '권한'
) COMMENT '유저테이블';

CREATE TABLE ADMIN_LIST
(
  POST_NO_ANNO INTEGER NOT NULL COMMENT '번호',
  POST_NO_QNA  INTEGER NOT NULL,
  POST_NO_FAQ  INTEGER NOT NULL
);

CREATE TABLE ANNOUNCEMENT
(
  POST_NO_ANNO INTEGER      NOT NULL COMMENT '번호',
  CATEGORY     VARCHAR(200) NOT NULL COMMENT '구분',
  TITLE        VARCHAR(200) NOT NULL COMMENT '제목',
  WRITER       VARCHAR(200) NOT NULL COMMENT '작성자',
  DATE         DATE         NOT NULL COMMENT '날짜',
  CONTENT      VARCHAR      NOT NULL COMMENT '내용',
  PRIMARY KEY (POST_NO_ANNO)
);

CREATE TABLE FAQ
(
  POST_NO_FAQ INTEGER      NOT NULL,
  CATEGORY    VARCHAR(200) NOT NULL,
  TITLE       VARCHAR(200) NOT NULL,
  WRITER      VARCHAR(200) NOT NULL,
  DATE        DATE         NOT NULL,
  CONTENT     VARCHAR      NOT NULL,
  PRIMARY KEY (POST_NO_FAQ)
);

CREATE TABLE QNA
(
  POST_NO_QNA INTEGER      NOT NULL,
  CATEGORY    VARCHAR(200) NOT NULL,
  TITLE       VARCHAR(200) NOT NULL,
  WRITER      VARCHAR(200) NOT NULL,
  DATE        DATE         NOT NULL,
  CONTENT     VARCHAR      NOT NULL,
  PRIMARY KEY (POST_NO_QNA)
);

ALTER TABLE ADMIN_LIST
  ADD CONSTRAINT FK_ANNOUNCEMENT_TO_ADMIN_LIST
    FOREIGN KEY (POST_NO_ANNO)
    REFERENCES ANNOUNCEMENT (POST_NO_ANNO);

ALTER TABLE ADMIN_LIST
  ADD CONSTRAINT FK_QNA_TO_ADMIN_LIST
    FOREIGN KEY (POST_NO_QNA)
    REFERENCES QNA (POST_NO_QNA);

ALTER TABLE ADMIN_LIST
  ADD CONSTRAINT FK_FAQ_TO_ADMIN_LIST
    FOREIGN KEY (POST_NO_FAQ)
    REFERENCES FAQ (POST_NO_FAQ);

ALTER TABLE REVIEW
  ADD CONSTRAINT FK_ITEM_INFO_TO_REVIEW
    FOREIGN KEY (PRODUCT_CODE)
    REFERENCES ITEM_INFO (PRODUCT_CODE);